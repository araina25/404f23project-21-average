openapi: 3.0.3
info:
  title: 21 Average Social Distribution API
  version: 1.0.0
  description: Social Distribution API for 21 Average
paths:
  /author:
    get:
      operationId: author_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - author
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAuthorList'
          description: ''
    post:
      operationId: author_create
      tags:
      - author
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Author'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Author'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
  /author/{id}:
    get:
      operationId: author_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this author.
        required: true
      tags:
      - author
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
    put:
      operationId: author_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this author.
        required: true
      tags:
      - author
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Author'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Author'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
    patch:
      operationId: author_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this author.
        required: true
      tags:
      - author
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAuthor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAuthor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAuthor'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
    delete:
      operationId: author_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this author.
        required: true
      tags:
      - author
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /comment:
    get:
      operationId: comment_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - comment
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCommentList'
          description: ''
    post:
      operationId: comment_create
      tags:
      - comment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
  /comment/{id}:
    get:
      operationId: comment_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this comment.
        required: true
      tags:
      - comment
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    put:
      operationId: comment_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this comment.
        required: true
      tags:
      - comment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    patch:
      operationId: comment_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this comment.
        required: true
      tags:
      - comment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedComment'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    delete:
      operationId: comment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this comment.
        required: true
      tags:
      - comment
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /connectednode:
    get:
      operationId: connectednode_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - connectednode
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedConnectedNodeList'
          description: ''
    post:
      operationId: connectednode_create
      tags:
      - connectednode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectedNode'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConnectedNode'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConnectedNode'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectedNode'
          description: ''
  /connectednode/{id}:
    get:
      operationId: connectednode_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this connected node.
        required: true
      tags:
      - connectednode
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectedNode'
          description: ''
    put:
      operationId: connectednode_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this connected node.
        required: true
      tags:
      - connectednode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectedNode'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConnectedNode'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConnectedNode'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectedNode'
          description: ''
    patch:
      operationId: connectednode_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this connected node.
        required: true
      tags:
      - connectednode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedConnectedNode'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedConnectedNode'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedConnectedNode'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectedNode'
          description: ''
    delete:
      operationId: connectednode_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this connected node.
        required: true
      tags:
      - connectednode
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /follow:
    get:
      operationId: follow_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - follow
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFollowList'
          description: ''
    post:
      operationId: follow_create
      tags:
      - follow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Follow'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Follow'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Follow'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Follow'
          description: ''
  /follow/{id}:
    get:
      operationId: follow_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this follow.
        required: true
      tags:
      - follow
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Follow'
          description: ''
    put:
      operationId: follow_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this follow.
        required: true
      tags:
      - follow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Follow'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Follow'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Follow'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Follow'
          description: ''
    patch:
      operationId: follow_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this follow.
        required: true
      tags:
      - follow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFollow'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFollow'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFollow'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Follow'
          description: ''
    delete:
      operationId: follow_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this follow.
        required: true
      tags:
      - follow
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /friendrequest:
    get:
      operationId: friendrequest_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - friendrequest
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFriendRequestList'
          description: ''
    post:
      operationId: friendrequest_create
      tags:
      - friendrequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FriendRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FriendRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FriendRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendRequest'
          description: ''
  /friendrequest/{id}:
    get:
      operationId: friendrequest_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this friend request.
        required: true
      tags:
      - friendrequest
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendRequest'
          description: ''
    put:
      operationId: friendrequest_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this friend request.
        required: true
      tags:
      - friendrequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FriendRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FriendRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FriendRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendRequest'
          description: ''
    patch:
      operationId: friendrequest_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this friend request.
        required: true
      tags:
      - friendrequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFriendRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFriendRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFriendRequest'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendRequest'
          description: ''
    delete:
      operationId: friendrequest_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this friend request.
        required: true
      tags:
      - friendrequest
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /like:
    get:
      operationId: like_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - like
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLikeList'
          description: ''
    post:
      operationId: like_create
      tags:
      - like
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Like'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Like'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Like'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Like'
          description: ''
  /like/{id}:
    get:
      operationId: like_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this like.
        required: true
      tags:
      - like
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Like'
          description: ''
    put:
      operationId: like_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this like.
        required: true
      tags:
      - like
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Like'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Like'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Like'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Like'
          description: ''
    patch:
      operationId: like_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this like.
        required: true
      tags:
      - like
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLike'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLike'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLike'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Like'
          description: ''
    delete:
      operationId: like_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this like.
        required: true
      tags:
      - like
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /post:
    get:
      operationId: post_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - post
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPostList'
          description: ''
    post:
      operationId: post_create
      tags:
      - post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
  /post/{id}:
    get:
      operationId: post_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this post.
        required: true
      tags:
      - post
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    put:
      operationId: post_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this post.
        required: true
      tags:
      - post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    patch:
      operationId: post_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this post.
        required: true
      tags:
      - post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPost'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    delete:
      operationId: post_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this post.
        required: true
      tags:
      - post
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    Author:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        host:
          type: string
          maxLength: 255
        displayName:
          type: string
          maxLength: 255
        url:
          type: string
        github:
          type: string
      required:
      - displayName
      - github
      - host
      - id
      - url
    Comment:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          maxLength: 255
        comment:
          type: string
        contentType:
          type: string
          maxLength: 255
        published:
          type: string
          format: date-time
        commenter:
          type: integer
        parentPost:
          type: string
          format: uuid
      required:
      - comment
      - commenter
      - contentType
      - id
      - parentPost
      - published
      - type
    ConnectedNode:
      type: object
      properties:
        id:
          type: string
          format: uuid
        url:
          type: string
          maxLength: 255
        host:
          type: string
          maxLength: 255
        teamName:
          type: string
          maxLength: 255
      required:
      - host
      - id
      - teamName
      - url
    Follow:
      type: object
      properties:
        from_author:
          type: integer
        to_author:
          type: integer
        status:
          type: string
          maxLength: 255
        id:
          type: string
          format: uuid
      required:
      - from_author
      - id
      - status
      - to_author
    FriendRequest:
      type: object
      properties:
        from_author:
          type: integer
        to_author:
          type: integer
        status:
          type: string
          maxLength: 255
        id:
          type: string
          format: uuid
      required:
      - from_author
      - id
      - status
      - to_author
    Like:
      type: object
      properties:
        author:
          type: integer
        posts:
          type: string
          format: uuid
        type:
          type: string
          maxLength: 255
        published:
          type: string
          format: date-time
        id:
          type: string
          format: uuid
      required:
      - author
      - id
      - posts
      - published
      - type
    PaginatedAuthorList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Author'
    PaginatedCommentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
    PaginatedConnectedNodeList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ConnectedNode'
    PaginatedFollowList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Follow'
    PaginatedFriendRequestList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/FriendRequest'
    PaginatedLikeList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Like'
    PaginatedPostList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Post'
    PatchedAuthor:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        host:
          type: string
          maxLength: 255
        displayName:
          type: string
          maxLength: 255
        url:
          type: string
        github:
          type: string
    PatchedComment:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          maxLength: 255
        comment:
          type: string
        contentType:
          type: string
          maxLength: 255
        published:
          type: string
          format: date-time
        commenter:
          type: integer
        parentPost:
          type: string
          format: uuid
    PatchedConnectedNode:
      type: object
      properties:
        id:
          type: string
          format: uuid
        url:
          type: string
          maxLength: 255
        host:
          type: string
          maxLength: 255
        teamName:
          type: string
          maxLength: 255
    PatchedFollow:
      type: object
      properties:
        from_author:
          type: integer
        to_author:
          type: integer
        status:
          type: string
          maxLength: 255
        id:
          type: string
          format: uuid
    PatchedFriendRequest:
      type: object
      properties:
        from_author:
          type: integer
        to_author:
          type: integer
        status:
          type: string
          maxLength: 255
        id:
          type: string
          format: uuid
    PatchedLike:
      type: object
      properties:
        author:
          type: integer
        posts:
          type: string
          format: uuid
        type:
          type: string
          maxLength: 255
        published:
          type: string
          format: date-time
        id:
          type: string
          format: uuid
    PatchedPost:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          maxLength: 255
        title:
          type: string
        source:
          type: string
          maxLength: 255
        origin:
          type: string
          maxLength: 255
        description:
          type: string
        contentType:
          type: string
          maxLength: 255
        content:
          type: string
        published:
          type: string
          format: date-time
        categories:
          type: string
        count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        owner:
          type: integer
    Post:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          maxLength: 255
        title:
          type: string
        source:
          type: string
          maxLength: 255
        origin:
          type: string
          maxLength: 255
        description:
          type: string
        contentType:
          type: string
          maxLength: 255
        content:
          type: string
        published:
          type: string
          format: date-time
        categories:
          type: string
        count:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        owner:
          type: integer
      required:
      - categories
      - content
      - contentType
      - count
      - description
      - id
      - origin
      - owner
      - published
      - source
      - title
      - type
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
