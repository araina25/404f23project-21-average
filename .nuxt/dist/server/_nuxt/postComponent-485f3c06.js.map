{"version":3,"file":"postComponent-485f3c06.js","sources":["../../../../pages/postComponent.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- Post Component -->\n    <div class=\"post\">\n      <div class=\"post-status-icon\">\n        <i v-if=\"isPublic\" class=\"bi bi-globe\"></i> <!-- Public Icon -->\n        <i v-else class=\"bi bi-lock-fill\"></i> <!-- Private Icon -->\n      </div>\n      <div class=\"user-info\">\n        <img :src=\"profilePicture\" alt=\"User Profile Picture\" class=\"profile-pic\" />\n        <span class=\"user-id\">{{ userId }}</span>\n      </div>\n      <p>{{ postContent }}</p>\n      <div class=\"post-actions\">\n        <button @click=\"toggleLike\">{{ liked ? 'Unlike' : 'Like' }}</button>\n        <button @click=\"toggleCommentBox\">Comment</button>\n        <button class='edit' @click=\"showEditPost = !showEditPost\">Edit</button>\n      </div>\n      <div v-if=\"showCommentBox\">\n        <textarea placeholder=\"Write a comment\"></textarea>\n        <button @click=\"toggleCommentBox\">Post Comment</button>\n      </div>\n    </div>\n\n    <!-- Edit Post Component -->\n    <div v-if=\"showEditPost\" class=\"edit-post\">\n      <textarea v-model=\"editedPostContent\" placeholder=\"Edit your post\"></textarea>\n      <div class=\"post-actions\">\n        <label class=\"upload-image\">\n          Change Image\n          <input type=\"file\" @change=\"onImageSelected\">\n        </label>\n        <div class=\"toggle-container\">\n          <label class=\"switch\">\n            <input type=\"checkbox\" v-model=\"isPublic\">\n            <span class=\"slider\"></span>\n          </label>\n          <span style=\"color:white\">{{ isPublic ? 'Public' : 'Private' }}</span>\n        </div>\n      </div>\n      <button @click=\"updatePost\">Update Post</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport { useAuthorStore } from '../stores/authorStore';\nexport default {\n  props: {\n    profilePicture: {\n      type: String,\n      default: ''\n    },\n    userId: String,\n    postID: String,\n    postContent: String,\n  },\n\n  data() {\n    return {\n      liked: false,\n      showCommentBox: false,\n      showEditPost: false,\n      postMainContent: this.postContent,\n      editedPostContent: '',  // initialized from the prop\n      postImage: null,\n      isPublic: false  // You can set the initial value as needed\n    };\n  },\n  async created() {\n    const authorStore = useAuthorStore();\n    try {\n      console.log('http://localhost:8000/api/post/' + this.postID)\n      const response = await axios.get('http://127.0.0.1:8000/authors/' + authorStore.getAuthorId + '/posts/');\n      console.log(response)\n      this.postMainContent = response.data.results['content'] // Updat\n      if (response.status === 200) {\n        this.post = response.data;\n      } else {\n        console.error('Error fetching post:', response);\n      }\n    } catch (error) {\n      console.error('Error while fetching post:', error);\n    }\n\n    // get likes\n  },\n\n\n  methods: {\n    toggleLike() {\n      this.liked = !this.liked;\n    },\n    toggleCommentBox() {\n      this.showCommentBox = !this.showCommentBox;\n    },\n    onImageSelected(event) {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = (e) => {\n          this.postImage = e.target.result;\n        };\n      }\n    },\n    async updatePost() {\n      const authorStore = useAuthorStore();\n      this.postContent = this.editedPostContent;  // Update the main content\n      this.showEditPost = false;\n      const payload = {\n        type: this.isPublic ? 'PUBLIC' : 'FRIENDS', // Adjust as per your requirement\n        title: 'string', // You can add a title input field in your template\n        source: 'string', // Adjust as per your requirement\n        origin: 'string', // Adjust as per your requirement\n        description: 'string', // You can add a description input field in your template\n        contentType: 'string', // Adjust based on your content type\n        content: this.postContent,\n        published: new Date().toISOString(),\n        categories: 'string', // Adjust as per your requirement\n      };\n      const response = await axios.get('http://127.0.0.1:8000/authors/' + authorStore.getAuthorId + '/posts/' + this.postID, payload);\n      console.log(response)\n    }\n\n  }\n};\n</script>\n\n<!-- Combining styles from both components -->\n<style scoped>\n/* Styles from PostComponent.vue */\n/* ... */\n.post {\n  background-color: black;\n  padding: 20px;\n  width: 80%;\n  margin: auto;\n  color: white;\n  margin-bottom: 20px;\n  border-radius: 5px;\n  position: relative;\n}\n\n.post-status-icon {\n  position: absolute;\n  top: 17px;\n  right: 17px;\n  font-size: 1.5em;\n  /* adjust as needed */\n}\n\n.bi {\n  vertical-align: middle;\n}\n\n.post-actions {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 20px;\n}\n\nbutton {\n  background-color: #00C58E;\n  color: black;\n  padding: 5px 10px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\nbutton:hover {\n  background-color: #007744;\n}\n\ntextarea {\n  background-color: grey;\n  color: white;\n}\n\n.user-info {\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  display: flex;\n  align-items: center;\n}\n\n.profile-pic {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  object-fit: cover;\n  margin-right: 5px;\n}\n\n.user-id {\n  color: #00C58E;\n}\n\n.edit-post {\n  display: flex;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 17px;\n  flex-direction: column;\n  align-items: center;\n  padding: 25px;\n  width: 400px;\n  height: 400px;\n  background-color: rgb(31, 32, 31);\n  border-radius: 15px;\n}\n\ntextarea {\n  width: 95%;\n  height: 200px;\n  padding: 10px;\n  border-radius: 5px;\n  border: 1px solid black;\n  background-color: black;\n  color: white;\n  margin-bottom: 15px;\n}\n\n.post-actions {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 95%;\n  margin-bottom: 15px;\n}\n\n.upload-image input[type=\"file\"] {\n  display: none;\n}\n\n.upload-image {\n  cursor: pointer;\n  background-color: black;\n  color: white;\n  padding: 6px 12px;\n  border-radius: 5px;\n}\n\nbutton {\n  width: 95%;\n  padding: 12px;\n  background-color: black;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\nbutton:hover {\n  background-color: #333;\n}\n\n.switch {\n  position: relative;\n  display: inline-block;\n  width: 60px;\n  height: 20px;\n  /* Adjusted to make it rectangular */\n}\n\n.switch input {\n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n\n.slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: black;\n  transition: 0.4s;\n  border-radius: 10px;\n  /* Rounded edges for the slider */\n}\n\n.slider:before {\n  position: absolute;\n  content: \"\";\n  height: 15px;\n  width: 15px;\n  left: 3px;\n  bottom: 3px;\n  background-color: #00C58E;\n  transition: 0.4s;\n  margin-bottom: -1px;\n  border-radius: 7px;\n  /* Rounded edges for the handle */\n}\n\ninput:checked+.slider {\n  background-color: black;\n}\n\ninput:checked+.slider:before {\n  transform: translateX(29px);\n  display: flex;\n  align-items: center;\n}\n\n.toggle-container {\n  display: flex;\n  align-items: center;\n}\n\n.toggle-container span {\n  margin-left: 10px;\n  color: black;\n}\n\n/* Styles from EditPostComponent.vue */\n/* ... */\n</style>\n"],"names":["_ssrRenderAttr"],"mappings":";;;;;;;;;;;;;;;;;;;;AAgDA,MAAK,YAAU;AAAA,EACb,OAAO;AAAA,IACL,gBAAgB;AAAA,MACd,MAAM;AAAA,MACN,SAAS;AAAA,IACV;AAAA,IACD,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,aAAa;AAAA,EACd;AAAA,EAED,OAAO;AACL,WAAO;AAAA,MACL,OAAO;AAAA,MACP,gBAAgB;AAAA,MAChB,cAAc;AAAA,MACd,iBAAiB,KAAK;AAAA,MACtB,mBAAmB;AAAA;AAAA,MACnB,WAAW;AAAA,MACX,UAAU;AAAA;AAAA;EAEb;AAAA,EACD,MAAM,UAAU;AACd,UAAM,cAAc;AACpB,QAAI;AACF,cAAQ,IAAI,oCAAoC,KAAK,MAAM;AAC3D,YAAM,WAAW,MAAM,MAAM,IAAI,mCAAmC,YAAY,cAAc,SAAS;AACvG,cAAQ,IAAI,QAAQ;AACpB,WAAK,kBAAkB,SAAS,KAAK,QAAQ,SAAS;AACtD,UAAI,SAAS,WAAW,KAAK;AAC3B,aAAK,OAAO,SAAS;AAAA,aAChB;AACL,gBAAQ,MAAM,wBAAwB,QAAQ;AAAA,MAChD;AAAA,IACA,SAAO,OAAO;AACd,cAAQ,MAAM,8BAA8B,KAAK;AAAA,IACnD;AAAA,EAGD;AAAA,EAGD,SAAS;AAAA,IACP,aAAa;AACX,WAAK,QAAQ,CAAC,KAAK;AAAA,IACpB;AAAA,IACD,mBAAmB;AACjB,WAAK,iBAAiB,CAAC,KAAK;AAAA,IAC7B;AAAA,IACD,gBAAgB,OAAO;AACrB,YAAM,OAAO,MAAM,OAAO,MAAM,CAAC;AACjC,UAAI,MAAM;AACR,cAAM,SAAS,IAAI;AACnB,eAAO,cAAc,IAAI;AACzB,eAAO,SAAS,CAAC,MAAM;AACrB,eAAK,YAAY,EAAE,OAAO;AAAA;MAE9B;AAAA,IACD;AAAA,IACD,MAAM,aAAa;AACjB,YAAM,cAAc;AACpB,WAAK,cAAc,KAAK;AACxB,WAAK,eAAe;AACpB,YAAM,UAAU;AAAA,QACd,MAAM,KAAK,WAAW,WAAW;AAAA;AAAA,QACjC,OAAO;AAAA;AAAA,QACP,QAAQ;AAAA;AAAA,QACR,QAAQ;AAAA;AAAA,QACR,aAAa;AAAA;AAAA,QACb,aAAa;AAAA;AAAA,QACb,SAAS,KAAK;AAAA,QACd,YAAW,oBAAI,KAAM,GAAC,YAAa;AAAA,QACnC,YAAY;AAAA;AAAA;AAEd,YAAM,WAAW,MAAM,MAAM,IAAI,mCAAmC,YAAY,cAAc,YAAY,KAAK,QAAQ,OAAO;AAC9H,cAAQ,IAAI,QAAQ;AAAA,IACtB;AAAA,EAEF;AACF;;;MA1HiB,MAAQ,UAAA;;;;;4DAIXA,cAAA,OAAK,OAAc,cAAA,yHACA,OAAM,MAAA,mDAE3B,OAAW,WAAA,yFAEgB,MAAK,QAAA,WAAA,MAAA;MAI3B,MAAc,gBAAA;;;;;;MAOhB,MAAY,cAAA;0HACF,MAAiB,iBAAA,4SAQE,MAAQ,QAAA,oBAAR,MAAQ,UAAA,IAAA,IAAR,MAAQ,QAAA,IAAA,aAAA,sGAGpC,EAAmB,SAAA,QAAA,CAAA,qCAAI,MAAQ,WAAA,WAAA,SAAA;;;;;;;;;;;;;"}