{"version":3,"file":"homePage-50f2d2d9.js","sources":["../../../../pages/homePage.vue"],"sourcesContent":["<template>\n  <div class=\"homepage-container\">\n\n    <!-- Homepage Main Content -->\n    <div class=\"homepage-main-content\">\n      <!-- Button to Show CreatePostComponent as a Popup -->\n      <div class=\"add-post-button-container\">\n        <button @click=\"showPostPopup = true\">Add New Post</button>\n      </div>\n\n      <!-- Posts rendering section -->\n      <div class=\"posts-feed\">\n        <h2>Posts</h2>\n        <PostComponent v-for=\"post in posts\" :key=\"post.id\" :postContent=\"post.content\" :postID=\"post.id\" />\n      </div>\n      <SidebarComponent />\n    </div>\n\n    <!-- CreatePostComponent Popup -->\n    <div v-if=\"showPostPopup\" class=\"post-popup\">\n      <div class=\"create-post\">\n        <!-- Close button -->\n        <button type=\"button\" class=\"close btn-close\" aria-label=\"Close\" @click=\"showPostPopup = false\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n\n        <textarea v-model=\"postContent\" placeholder=\"What's on your mind?\"></textarea>\n\n        <div class=\"post-actions\">\n          <label class=\"upload-image\">\n            Upload Image\n            <input type=\"file\" @change=\"onImageSelected\">\n          </label>\n          <div class=\"toggle-container\">\n            <label class=\"switch\">\n              <input type=\"checkbox\" v-model=\"isPublic\">\n              <span class=\"slider\"></span>\n            </label>\n            <span>{{ isPublic ? 'Public' : 'Private' }}</span>\n          </div>\n        </div>\n\n        <button @click=\"submitPost\">Post</button>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n\n<script lang=\"ts\">\nimport { useAuthorStore } from '../stores/authorStore';\nimport PostComponent from './postComponent.vue';\nimport SidebarComponent from './sidebar.vue';\nimport { storeToRefs } from 'pinia'\nimport axios from 'axios';\n\nexport default {\n  name: \"SocialDistributionApp\",\n  components: {\n    PostComponent,\n    SidebarComponent,\n  },\n  data() {\n    return {\n      posts: [],\n      postContent: '',\n      postImage: null,\n      isPublic: true,\n      showPostPopup: false, // Variable to control the visibility of the create post popup\n    };\n  },\n  async mounted() {\n    // this.fetchPosts();\n    const authorStore = useAuthorStore();\n    const response = await axios.get(process.env.API_URL +  authorStore.getAuthorId + '/posts/');\n    this.posts = response.data.results;\n  },\n  methods: {\n    // Methods for CreatePostComponent\n    onImageSelected(event) {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = (e) => {\n          this.postImage = e.target.result;\n        };\n      }\n      // Image selection logic\n    },\n    async submitPost() {\n      const authorStore = useAuthorStore();\n      // authorStore.fetchAuthor()\n      // Post submission logic\n      try {\n        const payload = {\n          type: this.isPublic ? 'PUBLIC' : 'FRIENDS', // Adjust as per your requirement\n          title: 'string', // You can add a title input field in your template\n          source: 'string', // Adjust as per your requirement\n          origin: 'string', // Adjust as per your requirement\n          description: 'string', // You can add a description input field in your template\n          contentType: 'string', // Adjust based on your content type\n          content: this.postContent,\n          published: new Date().toISOString(),\n          categories: 'string', // Adjust as per your requirement\n          image: this.postImage,\n        };\n        axios.defaults.headers.common[\"Authorization\"] = `Bearer ${authorStore.getAuthToken}`;\n        const response = await axios.post(process.env.API_URL +  authorStore.getAuthorId + '/posts/', payload);\n        console.log(response.data)\n      } catch (error) {\n        console.error('Error while creating post:', error);\n      }\n      this.showPostPopup = false; // Close the popup after submitting the post\n    }\n  },\n  async created() {\n    const authorStore = useAuthorStore();\n    try {\n      console.log(authorStore.authorId, authorStore.authToken)\n      const response = await axios.get(process.env.API_URL +  authorStore.getAuthorId + '/posts/');\n    } catch (error) {\n      console.error('Error while fetching posts:', error);\n    }\n  },\n\n};\n</script>\n\n<style>\n/* Add styles for the popup overlay and the existing styles for create-post */\n.post-popup {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.6);\n  /* Semi-transparent background */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n  /* To ensure it's on top of other content */\n}\n\n.create-post {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 25px;\n  width: 400px;\n  height: 400px;\n  background-color: #00C58E;\n  border-radius: 15px;\n}\n\ntextarea {\n  width: 95%;\n  height: 200px;\n  padding: 10px;\n  border-radius: 5px;\n  border: 1px solid black;\n  background-color: black;\n  color: white;\n  margin-bottom: 15px;\n}\n\n.post-actions {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 95%;\n  margin-bottom: 15px;\n}\n\n.upload-image input[type=\"file\"] {\n  display: none;\n}\n\n.upload-image {\n  cursor: pointer;\n  background-color: black;\n  color: white;\n  padding: 6px 12px;\n  border-radius: 5px;\n}\n\nbutton {\n  width: 95%;\n  padding: 12px;\n  background-color: black;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\nbutton:hover {\n  background-color: #333;\n}\n\n.switch {\n  position: relative;\n  display: inline-block;\n  width: 60px;\n  height: 20px;\n  /* Adjusted to make it rectangular */\n}\n\n.switch input {\n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n\n.slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: black;\n  transition: 0.4s;\n  border-radius: 10px;\n  /* Rounded edges for the slider */\n}\n\n.slider:before {\n  position: absolute;\n  content: \"\";\n  height: 15px;\n  width: 15px;\n  left: 3px;\n  bottom: 3px;\n  background-color: #00C58E;\n  transition: 0.4s;\n  margin-bottom: -1px;\n  border-radius: 7px;\n  /* Rounded edges for the handle */\n}\n\ninput:checked+.slider {\n  background-color: black;\n}\n\ninput:checked+.slider:before {\n  transform: translateX(29px);\n  display: flex;\n  align-items: center;\n}\n\n.toggle-container span {\n  margin-left: 10px;\n  color: black;\n}\n\n.homepage-container {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  right: 0;\n}\n\n.homepage-main-content {\n  position: fixed;\n  left: 26%;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  background-color: #00C58E;\n  overflow-y: auto;\n  overflow-x: hidden;\n  padding: 20px;\n}\n\n.posts-feed {\n  margin: 20px 0;\n}\n\n.posts-feed h2 {\n  color: black;\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n.add-post-button-container {\n  display: flex;\n  justify-content: center;\n  margin: 20px 0;\n}\n\n.btn-close {\n  position: absolute;\n  width: 30px;\n  /* Square button dimensions */\n  height: 30px;\n  top: 10px;\n  right: 10px;\n  background-color: black;\n  border: none;\n  display: flex;\n  align-items: center;\n  /* Centers the 'x' vertically */\n  justify-content: center;\n  /* Centers the 'x' horizontally */\n  padding: 0;\n  /* Override Bootstrap's padding to maintain the square shape */\n}\n</style>"],"names":["_ssrRenderComponent","_ssrInterpolate","_ssrIncludeBooleanAttr","_ssrLooseContain"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAyDA,MAAe,YAAA;AAAA,EACb,MAAM;AAAA,EACN,YAAY;AAAA,IACV;AAAA,IACA;AAAA,EACF;AAAA,EACA,OAAO;AACE,WAAA;AAAA,MACL,OAAO,CAAC;AAAA,MACR,aAAa;AAAA,MACb,WAAW;AAAA,MACX,UAAU;AAAA,MACV,eAAe;AAAA;AAAA,IAAA;AAAA,EAEnB;AAAA,EACA,MAAM,UAAU;AAEd,UAAM,cAAc;AACd,UAAA,WAAW,MAAM,MAAM,IAAI,QAAQ,IAAI,UAAW,YAAY,cAAc,SAAS;AACtF,SAAA,QAAQ,SAAS,KAAK;AAAA,EAC7B;AAAA,EACA,SAAS;AAAA;AAAA,IAEP,gBAAgB,OAAO;AACrB,YAAM,OAAO,MAAM,OAAO,MAAM,CAAC;AACjC,UAAI,MAAM;AACF,cAAA,SAAS,IAAI;AACnB,eAAO,cAAc,IAAI;AAClB,eAAA,SAAS,CAAC,MAAM;AAChB,eAAA,YAAY,EAAE,OAAO;AAAA,QAAA;AAAA,MAE9B;AAAA,IAEF;AAAA,IACA,MAAM,aAAa;AACjB,YAAM,cAAc;AAGhB,UAAA;AACF,cAAM,UAAU;AAAA,UACd,MAAM,KAAK,WAAW,WAAW;AAAA;AAAA,UACjC,OAAO;AAAA;AAAA,UACP,QAAQ;AAAA;AAAA,UACR,QAAQ;AAAA;AAAA,UACR,aAAa;AAAA;AAAA,UACb,aAAa;AAAA;AAAA,UACb,SAAS,KAAK;AAAA,UACd,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,UAClC,YAAY;AAAA;AAAA,UACZ,OAAO,KAAK;AAAA,QAAA;AAEd,cAAM,SAAS,QAAQ,OAAO,eAAe,IAAI,UAAU,YAAY,YAAY;AAC7E,cAAA,WAAW,MAAM,MAAM,KAAK,QAAQ,IAAI,UAAW,YAAY,cAAc,WAAW,OAAO;AAC7F,gBAAA,IAAI,SAAS,IAAI;AAAA,eAClB,OAAO;AACN,gBAAA,MAAM,8BAA8B,KAAK;AAAA,MACnD;AACA,WAAK,gBAAgB;AAAA,IACvB;AAAA,EACF;AAAA,EACA,MAAM,UAAU;AACd,UAAM,cAAc;AAChB,QAAA;AACF,cAAQ,IAAI,YAAY,UAAU,YAAY,SAAS;AACjD,YAAA,WAAW,MAAM,MAAM,IAAI,QAAQ,IAAI,UAAW,YAAY,cAAc,SAAS;AAAA,aACpF,OAAO;AACN,cAAA,MAAM,+BAA+B,KAAK;AAAA,IACpD;AAAA,EACF;AAEF;;;;uDA9Ha,kBAAoB;;gBAYuB,MAAE,OAAA,CAAA,SAAA;AAAG,UAAAA,mBAAkB,0BAAO;AAAA,MAAG,KAAQ,KAAA;AAAA,MAAA,aAAA,KAAA;AAAA;;;;QAMlFA,mBAAa,6BAAA,MAAA,MAAA,OAAA,CAAA;;AAOD,MAAA,MAAA,eAAA;AAS2B,UAAA,gNAAAC,eAAA,MAAA,WAAA,CAAA,uLAAAC,sBAAA,MAAA,QAAA,MAAA,QAAA,IAAAC,gBAAA,MAAA,UAAA,IAAA,IAAA,MAAA,QAGjC,IAAQ,aAAA,EAAA,8CAAAF,eAAA,MAAA,WAAA,WAAA,SAAA,CAAA,sDAAA;AAAA;;;;;;;;;;;;"}